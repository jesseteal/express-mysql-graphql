"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SQL_RELATIONSHIPS = function (schema) { return "select\n  t.TABLE_NAME,\n  t.REFERENCED_TABLE_NAME as LINKED_TABLE,\n  t.COLUMN_NAME as FROM_COL,\n  t.REFERENCED_COLUMN_NAME AS TO_COL\n  from INFORMATION_SCHEMA.KEY_COLUMN_USAGE t\n  WHERE t.TABLE_SCHEMA='".concat(schema, "'\n  AND t.REFERENCED_TABLE_NAME IS NOT NULL\n  ORDER BY t.TABLE_NAME\n"); };
var SQL_SCHEMA = function (schema) { return "select\n    q1.TABLE_NAME,\n    q1.types,\n    pk.PKEYS,\n    CONCAT('input ', q2.TABLE_NAME, 'Input {\n    ',group_concat(q2.COLUMNS SEPARATOR '\n'),'\n    }') as inputs\n  from\n  (\n    SELECT\n      t.TABLE_NAME,\n        CONCAT('type ',t.TABLE_NAME,' {\n    ',group_concat(q.COLUMNS SEPARATOR '\n'),'\n    }') as types\n      FROM INFORMATION_SCHEMA.TABLES t\n      inner join\n      (\n      SELECT\n        c.TABLE_NAME,\n        CONCAT('\t',COLUMN_NAME,': ',\n              case when DATA_TYPE in ('int','tinyint','smallint','bigint') THEN ' Int'\n                when DATA_TYPE in ('decimal','float','double') THEN ' Float'\n                when DATA_TYPE = 'datetime' then ' DateTime'\n                when DATA_TYPE = 'date' then ' Date'\n                ELSE ' String' end,\n              case when IS_NULLABLE = 'NO' AND COLUMN_KEY <> 'PRI' then '!' else '' end\n        ) as COLUMNS\n      FROM INFORMATION_SCHEMA.COLUMNS c\n      WHERE c.TABLE_SCHEMA='".concat(schema, "' AND c.COLUMN_COMMENT NOT LIKE '@Omit'\n      union\n      -- FK references\n      select\n      t.TABLE_NAME,\n      concat('\t',t.COLUMN_NAME,'_',t.REFERENCED_TABLE_NAME,'(where: String): ',t.REFERENCED_TABLE_NAME) as COLUMNS\n      from INFORMATION_SCHEMA.KEY_COLUMN_USAGE t\n      WHERE t.TABLE_SCHEMA='").concat(schema, "'\n      AND t.REFERENCED_TABLE_NAME IS NOT NULL\n      -- reverse FK (children)\n      union\n      select\n      t.REFERENCED_TABLE_NAME,\n      concat('\t',case when TABLE_NAME = REFERENCED_TABLE_NAME then SUBSTRING(t.COLUMN_NAME,1,LENGTH(t.COLUMN_NAME)-2) else t.TABLE_NAME end,'(limit: Int, offset: Int, where: String, order: String): [',t.TABLE_NAME,']') as COLUMNS\n      from INFORMATION_SCHEMA.KEY_COLUMN_USAGE t\n      WHERE t.TABLE_SCHEMA='").concat(schema, "'\n      AND t.REFERENCED_TABLE_NAME IS NOT NULL\n          ) q on q.TABLE_NAME=t.TABLE_NAME\n          WHERE t.TABLE_SCHEMA='").concat(schema, "'\n          AND TABLE_COMMENT not LIKE '@Omit'\n          GROUP BY t.TABLE_NAME\n      )q1\n      inner join\n      (\n      SELECT\n            c.TABLE_NAME,\n      CONCAT('\t',COLUMN_NAME,': ',\n          case when DATA_TYPE in ('int','tinyint','smallint','bigint') THEN ' Int'\n            when DATA_TYPE in ('decimal','float','double') THEN ' Float'\n            when DATA_TYPE = 'datetime' then ' DateTime'\n            when DATA_TYPE = 'date' then ' Date'\n            ELSE ' String' end\n        ) as COLUMNS\n        FROM INFORMATION_SCHEMA.COLUMNS c\n        WHERE c.TABLE_SCHEMA='").concat(schema, "' AND c.COLUMN_COMMENT NOT LIKE '@Omit'\n  ) q2 on q1.TABLE_NAME=q2.TABLE_NAME\n  INNER JOIN (\n    SELECT\n      t.TABLE_NAME,group_concat(c.COLUMN_NAME) AS PKEYS\n    FROM INFORMATION_SCHEMA.TABLES t\n      LEFT JOIN INFORMATION_SCHEMA.COLUMNS c on c.TABLE_NAME=t.TABLE_NAME\n    WHERE t.TABLE_SCHEMA='").concat(schema, "' AND c.TABLE_SCHEMA='").concat(schema, "'\n      AND t.TABLE_COMMENT not LIKE '@Omit'\n      AND c.COLUMN_KEY='PRI'\n    group by t.TABLE_NAME\n    ORDER BY t.TABLE_NAME\n  ) pk on pk.TABLE_NAME=q1.TABLE_NAME\n  group by q1.TABLE_NAME\n"); };
exports.default = {
    SQL_RELATIONSHIPS: SQL_RELATIONSHIPS,
    SQL_SCHEMA: SQL_SCHEMA,
};
